;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Pzt Ara 9 2024
; Processor: 8086
; Compiler:  MASM32
;
; Before starting simulation set Internal Memory Size 
; in the 8086 model properties to 0x10000
;====================================================================

STAK    SEGMENT PARA STACK 'STACK'
        DW 20 DUP(?)
STAK    ENDS

DATA    SEGMENT PARA 'DATA'
numbers  DB 3 DUP(0)       ; son 3 karakteri saklamak icin
DATA    ENDS

CODE    SEGMENT PARA 'CODE'
        ASSUME CS:CODE, DS:DATA, SS:STAK
START:
        MOV AX, DATA
MOV DS, AX

MOV DX, 015Bh ; mod register'a erişim
MOV AL, 01001101B ; son iki bit 00'dan farklı olmalı,  asenkron olması için
OUT DX, AL

MOV AL, 01000000B ; control register, yazılımsal reset işlemi
OUT DX, AL ; artık 8251 resetlendi

MOV AL, 01001101B ; bir stop biti, parity yok, 8 data biti kullanılacak. Son iki bit 01, factor 1, 9600/1 = 9600 baud rate
OUT DX, AL

MOV AL, 00010101B ; hata biti varsa temizle, RxE ve TxEn bitlerini aktif et (hem receive hem de transmit olacak)
OUT DX, AL

MOV SI, OFFSET numbers ; SI'da 3 sayi tutulan dizinin adresi tutulacak
XOR CX, CX ; 3 veya daha az karakter girilmesinin kontrolunu CX yapacak

ENDLESS:

MOV DX, 0015BH
TEKRAR:
IN AL, DX ; status word oku
AND AL, 02H ; RxRDY ucu 1 olana kadar bekle, veri almaya hazır olana kadar maskele
JZ TEKRAR

MOV DX, 00159H
IN AL, DX ; 8251'in data in buffer'ından karakteri oku
SHR AL, 1 ; hatayı gidermek için

CMP AL, 31h ; '1' degeri geldiginde dur ve printlemeye basla
JE STOP_INPUT
MOV BL, [SI+1]
MOV [SI+2], BL ; 1. indexteki degeri 2. ye kopyala
MOV BL, [SI]
MOV [SI+1], BL ; 0. indexteki degeri 1. ye kopyala
MOV [SI], AL ; yeni degeri 0. indexe koy

CMP CX, 3 ; 3 karakter girilene kadar CX'i artir. 3 karakterden az girilmisse daha az print yapilacak
JZ THREE ; 3 karakter varsa daha artirmaya gerek yok
INC CX
THREE:
JMP ENDLESS

STOP_INPUT:
CMP CX, 0
JZ ENDLESS ; hiç karakter girilmemisse input almaya devam et

PRINT:
MOV DX, 015BH
TEKRAR3:
IN AL, DX ; status word oku
AND AL, 01H ; TxRDY 1 olana kadar bekle, okumaya hazır olana kadar maskele
JZ TEKRAR3

MOV DX, 0159H
MOV AL, [SI] ; diziden veriyi çek
OUT DX, AL ; numbers dizisini 0. indexten itibaren printle, 8251'in data out buffer'ına karakteri yaz

INC SI ; bir sonraki indexe gec
LOOP PRINT

XOR CX,CX
JMP ENDLESS ; print islemi bitti yeni inputlar al

CODE    ENDS
        END START